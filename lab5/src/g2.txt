PROGRAM, DECLARATION_LIST, ARRAY_DECLARATION, DECLARATION, IDENTIFIER, CONSTANT, ASSIGNMENT, TYPE, COMPOUND_STATEMENT, STATEMENT_LIST, ASSIGN_STATEMENT, IO_STATEMENT, STRUCTURAL_STATEMENT, EXPRESSION, TERM, FACTOR, CONDITIONAL_STATEMENT, REPETITIVE_STATEMENT, CONDITION, STATEMENT, RELATION
1, 0, BEGIN, END, ., real, int, string, variable, array_of, char, otherwise, in case, loop, in, show, read, is, size, sum, lt, slt, gt, sgt, eq, add, diff, mul, div, is, [, ], {, }, :, ~, }
CONSTANT-> 0; IDENTIFIER-> 1; PROGRAM-> DECLARATION_LIST ~ STATEMENT_LIST | array_of ARRAY_DECLARATION ~; DECLARATION_LIST-> DECLARATION | DECLARATION ~ DECLARATION_LIST; DECLARATION-> variable IDENTIFIER | variable IDENTIFIER ASSIGNMENT | variable IDENTIFIER : TYPE; ASSIGNMENT-> = CONSTANT; ARRAY_DECLARATION-> TYPE IDENTIFIER | variable IDENTIFIER; TYPE-> int | char | string | real | bool; COMPOUND_STATEMENT-> BEGIN STATEMENT_LIST END; STATEMENT_LIST-> STATEMENT ~ | STATEMENT ~ STATEMENT_LIST; STATEMENT-> ASSIGN_STATEMENT | IO_STATEMENT | STRUCTURAL_STATEMENT; ASSIGN_STATEMENT-> IDENTIFIER is EXPRESSION; EXPRESSION-> CONSTANT | IDENTIFIER | TERM add TERM | TERM diff TERM; TERM-> FACTOR mul FACTOR | FACTOR div FACTOR | FACTOR; FACTOR-> ( EXPRESSION ) | IDENTIFIER; IO_STATEMENT-> read | show IDENTIFIER; STRUCTURAL_STATEMENT-> CONDITIONAL_STATEMENT | REPETITIVE_STATEMENT; CONDITIONAL_STATEMENT-> in_case CONDITION : STATEMENT  | in_case CONDITION : STATEMENT otherwise STATEMENT; REPETITIVE_STATEMENT-> loop CONDITION : STATEMENT; CONDITION-> EXPRESSION RELATION EXPRESSION; RELATION-> gt | lt | eq | sgt | slt | in;
PROGRAM